{"version":3,"sources":["webpack:///index.js","webpack:///./js/app.js","webpack:///./js/cameraListView.js","webpack:///./js/cameraView.js","webpack:///./js/dashboardView.js","webpack:///./index.html","webpack:///external \"angular\"","webpack:///external {\"amd\":\"angular-route\"}","webpack:///./js/index.js","webpack:///./views/camera_list.html","webpack:///./views/camera_view.html","webpack:///./views/dashboard.html","webpack:///external \"Twilio.Sync\""],"names":["webpackJsonp","196","module","exports","__webpack_require__","CAMERA_SNAPSHOT_DOCUMENT_NAME","cameraId","CAMERA_CONTROL_MAP_NAME","CAMERA_ALERTS_LIST_NAME","CAMERA_ARCHIVES_LIST_NAME","alertId","callbacks","randomString","len","charSet","i","randomPoz","Math","floor","random","length","substring","fetchSnapshotTmpUrl","mcs_url","callback","$","ajax","type","url","dataType","beforeSend","xhr","setRequestHeader","token","success","data","status","links","content_direct_temporary","fetchCameraSnapshotTmpUrl","camera","snapshot","snapshotTmpUrl","img_url","refresh","fetchSnapshot","syncClient","document","info","id","then","doc","snapshotDocument","value","on","console","log","JSON","stringify","fetchControl","map","Promise","all","get","items","controlMap","control","preview","alarm","arm","key","loadCameras","invalidCameras","configDocument","cameras","name","contact_number","twilio_sim_sid","warn","push","removeAllListeners","cameraInfoCheck","match","genToken","hash","crypto","createHash","update","digest","SyncClient","Client","initialized","Deferred","updateToken","cb","that","this","result","setTimeout","bind","ttl","error","fail","jqXHR","textStatus","fetchConfiguration","newDoc","extend","forEach","idOfInvalidCamera","set","addCamera","newCamera","created_at","Date","getTime","t","mutate","remoteData","enabled","responded_alarm","list","catch","err","updateCamera","updatedCamera","regenToken","deleteCamera","removeMap","removeList","controlPreview","controlArm","disarm","getAlerts","getItems","order","page","getNextArchivedSnapshot","archiveId","item","init","resolve","197","cameraListView","templateUrl","app","$scope","angular","copy","cameraAdded","text","editedCameraInfo","hide","fadeIn","$apply","editCamera","regenTokenForCamera","cameraUpdated","click","198","cameraView","selectedAlertChanged","selectedAlertId","selectedArchiveId","selectNewArchiveId","newArchiveId","selectPreviousArchive","selectNextArchive","alerts","index","199","dashboardView","noCamera","Object","keys","switchPreview","switchArm","201","p","202","203","undefined","204","moment","currentView","$currentViewScope","App","window","controller","when","done","$routeParams","config","$routeProvider","otherwise","redirectTo","filter","datestr","format","286","path","run","c","put","287","288","313","Twilio","Sync"],"mappings":"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","file":"index.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 196:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nconst APP_CONFIGURATION_DOCUMENT_NAME = \"app.configuration\";\nfunction CAMERA_SNAPSHOT_DOCUMENT_NAME(cameraId) { return \"cameras.\" + cameraId + \".snapshot\"; }\nfunction CAMERA_CONTROL_MAP_NAME(cameraId) { return \"cameras.\" + cameraId + \".control\"; }\nfunction CAMERA_ALERTS_LIST_NAME(cameraId) { return \"cameras.\" + cameraId + \".alerts\"; }\nfunction CAMERA_ARCHIVES_LIST_NAME(cameraId, alertId) { return \"cameras.\" + cameraId + \".archives.\" + alertId; }\n\nmodule.exports = function(callbacks) {\n  const $ = __webpack_require__(4);\n  const crypto = __webpack_require__(41);\n  const SyncClient = __webpack_require__(313).Client;\n  var syncClient;\n  var token;\n  var auth = \"username=twilio&pincode=928462\";\n  var configDocument;\n\n  var cameras = {};\n\n  function randomString(len) {\n      var charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n      var randomString = '';\n      for (var i = 0; i < len; i++) {\n          var randomPoz = Math.floor(Math.random() * charSet.length);\n          randomString += charSet.substring(randomPoz,randomPoz+1);\n      }\n      return randomString;\n  }\n\n  function fetchSnapshotTmpUrl(mcs_url, callback) {\n    $.ajax({\n      type: \"GET\",\n      url: mcs_url,\n      dataType: 'json',\n      beforeSend: function (xhr) { xhr.setRequestHeader('X-Twilio-Token', token); },\n      success: function (data, status, xhr) {\n        callback(data.links.content_direct_temporary);\n      }\n    });\n  }\n\n  function fetchCameraSnapshotTmpUrl(camera) {\n    fetchSnapshotTmpUrl(camera.snapshot.mcs_url, function (snapshotTmpUrl) {\n        camera.snapshot.img_url = snapshotTmpUrl;\n        callbacks.refresh();\n    });\n  }\n\n  function fetchSnapshot(camera) {\n    syncClient.document(CAMERA_SNAPSHOT_DOCUMENT_NAME(camera.info.id)).then(function (doc) {\n      camera.snapshotDocument = doc;\n      camera.snapshot = doc.value;\n      fetchCameraSnapshotTmpUrl(camera);\n      doc.on(\"updated\", function (data) {\n        console.log(\"camera snapshot updated\", camera.info.id, JSON.stringify(data));\n        camera.snapshot = data;\n        fetchCameraSnapshotTmpUrl(camera);\n      });\n    });\n  }\n\n  function fetchControl(camera) {\n    syncClient.map(CAMERA_CONTROL_MAP_NAME(camera.info.id)).then(function (map) {\n      Promise.all([\n        map.get(\"preview\"),\n        map.get(\"alarm\"),\n        map.get(\"arm\")\n      ]).then(function (items) {\n        camera.controlMap = map;\n        camera.control = {\n          preview : items[0].value,\n          alarm : items[1].value,\n          arm : items[2].value,\n        };\n        console.log(\"camera control fetched\", camera.info.id, JSON.stringify(camera.control));\n        map.on(\"itemUpdated\", function (data) {\n          console.log(\"camera control updated\", camera.info.id, data.key, JSON.stringify(data.value));\n          camera.control[data.key] = data.value;\n          callbacks.refresh();\n        });\n        callbacks.refresh();\n      });\n    });\n  }\n\n  function loadCameras() {\n    var invalidCameras = [];\n\n    for (var cameraId in configDocument.value.cameras) {\n      var camera = configDocument.value.cameras[cameraId];\n      if (camera.id === cameraId &&\n          typeof (camera.name) === \"string\" &&\n          typeof(camera.contact_number) === \"string\" &&\n          typeof(camera.twilio_sim_sid) === \"string\") {\n        if (cameraId in cameras) {\n          if (camera.name !== cameras[cameraId].info.name ||\n              camera.contact_number !== cameras[cameraId].info.contact_number ||\n              camera.twilio_sim_sid !== cameras[cameraId].info.twilio_sim_sid) {\n            console.log(\"Updating camera\", camera);\n            cameras[cameraId].info = camera;\n          }\n        } else {\n          console.log(\"Loading new camera\", camera);\n          cameras[cameraId] = {\n            info: camera\n          };\n          fetchSnapshot(cameras[cameraId]);\n          fetchControl(cameras[cameraId]);\n        }\n      } else {\n        console.warn(\"Invalid camera configuration, removing from the list: \", cameraId, camera);\n        invalidCameras.push(cameraId);\n      }\n    }\n    for (var cameraId in cameras) {\n      if (!(cameraId in configDocument.value.cameras)) {\n        console.log(\"Deleting camera\", camera);\n        if (cameras[cameraId].snapshotDocument) {\n          cameras[cameraId].snapshotDocument.removeAllListeners('updated');\n        }\n        if (cameras[cameraId].controlMap) {\n          cameras[cameraId].controlMap.removeAllListeners('itemUpdated');\n        }\n        delete cameras[cameraId];\n      }\n    }\n\n    return invalidCameras;\n  }\n\n  function cameraInfoCheck(camera, callback) {\n    if (!camera.id || !camera.id.match(/^[a-zA-Z0-9]+$/))  { callback(\"camera id is invalid: \" + camera.id); return false; }\n    if (!camera.name) { callback(\"camera name is not specified\"); return false; }\n    if (!camera.contact_number || !camera.contact_number.match(/^[0-9]+$/)) { callback(\"camera contact number is invalid(only digits allowed): \" + camera.contact_number); return false; }\n    if (!camera.twilio_sim_sid || !camera.twilio_sim_sid.match(/^DE[a-z0-9]{32}$/)) { callback(\"camera sim SID is invalid: \" + camera.twilio_sim_sid); return false; }\n    return true;\n  }\n\n  function genToken() {\n    var token = randomString(16);\n    var hash = crypto.createHash('sha512').update(token).digest(\"hex\");\n    return { token: token, hash: hash };\n  }\n\n  return {\n  initialized: $.Deferred(),\n\n  cameras: cameras,\n\n  updateToken: function (cb) {\n    var that = this;\n    return $.get(\"/userauthenticate?\" + auth, function (result) {\n      if (result.success) {\n        console.log(\"token updated:\", result);\n        token = result.token;\n        if (syncClient) {\n            syncClient.updateToken(token);\n        } else {\n            syncClient = new SyncClient(token);\n        }\n        if (cb) cb(token);\n        setTimeout(that.updateToken.bind(that), result.ttl*1000 * 0.96); // update token slightly in adance of ttl\n      } else {\n        console.error(\"failed to authenticate the user: \", result.error);\n      }\n    }).fail(function (jqXHR, textStatus, error) {\n      console.error(\"failed to send authentication request:\", textStatus, error);\n      setTimeout(that.updateToken.bind(that), 10000); // retry in 10 seconds\n    });\n  },\n\n  fetchConfiguration: function () {\n    return syncClient.document(APP_CONFIGURATION_DOCUMENT_NAME).then(function (doc) {\n      configDocument = doc;\n      var newDoc = null;\n      var invalidCameras;\n\n      if (doc.value.cameras) {\n        invalidCameras = loadCameras();\n        if (invalidCameras.length) {\n          if (null ===  newDoc) newDoc = $.extend(true, doc.value, {});\n          invalidCameras.forEach(function (idOfInvalidCamera) {\n            delete newDoc.cameras[idOfInvalidCamera];\n          });\n        }\n      } else {\n        console.warn(\"cameras is not configured, creating an empty list\");\n        if (null ===  newDoc) newDoc = $.extend(true, doc.value, {});\n        newDoc.cameras = {};\n      }\n      return newDoc;\n    }).then(function (newDoc) {\n      if (newDoc !== null) {\n        return configDocument.set(newDoc).then(function () {\n          console.log(\"app configuration updated with new value:\", newDoc);\n        });\n      }\n    });\n  },\n\n  addCamera: function (newCamera, callback) {\n    if (!cameraInfoCheck(newCamera, callback)) return;\n    if (newCamera.id in configDocument.value.cameras) return callback(\"Camera with the same ID exists\");\n    newCamera.created_at = (new Date()).getTime();\n\n    var t = genToken();\n    newCamera.hash = t.hash;\n\n    configDocument.mutate(function (remoteData) {\n      if (!remoteData.cameras) remoteData.cameras = {};\n      remoteData.cameras[newCamera.id] = newCamera;\n      return remoteData;\n    }).then(function () {\n      // create necessary objects\n      return Promise.all([\n        syncClient.map(CAMERA_CONTROL_MAP_NAME(newCamera.id)).then(function (controlMap) {\n          return Promise.all[\n            controlMap.set('alarm', { id: -1 }),\n            controlMap.set('arm', { enabled: true, responded_alarm: -1}),\n            controlMap.set('preview', { enabled : false })\n          ];\n        }),\n        syncClient.list(CAMERA_ALERTS_LIST_NAME(newCamera.id)),\n      ]);\n    }).then(function () {\n      loadCameras();\n      // make token temporarily visible\n      callback(null, $.extend(true, cameras[newCamera.id].info, { token: t.token }));\n      callbacks.refresh();\n    }).catch(function (err) {\n      callback(err);\n    });\n  },\n\n  updateCamera: function (updatedCamera, callback) {\n    configDocument.mutate(function (remoteData) {\n      if (updatedCamera.id in remoteData.cameras) {\n        remoteData.cameras[updatedCamera.id] = $.extend(true, updatedCamera, {\n            hash: remoteData.cameras[updatedCamera.id].hash\n          });\n      } else {\n        callback(\"Camera is not in the list\");\n      }\n      return remoteData;\n    }).then(function () {\n      loadCameras();\n      callback(null);\n      callbacks.refresh();\n    }).catch(function (err) {\n      callback(err);\n    });\n  },\n\n  regenToken: function (cameraId, callback) {\n    var t = genToken();\n    configDocument.mutate(function (remoteData) {\n      if (cameraId in remoteData.cameras) {\n        remoteData.cameras[cameraId].hash = t.hash;\n      } else {\n        throw \"unknown camera: \" + cameraId;\n      }\n      return remoteData;\n    }).then(function () {\n      loadCameras();\n      // make token temporarily visible\n      callback($.extend(true, cameras[cameraId].info, { token: t.token }));\n      callbacks.refresh();\n    }).catch(function (err) {\n      // ignore error\n      console.error(\"regenToken\", err);\n    });\n  },\n\n  deleteCamera: function (cameraId) {\n    configDocument.mutate(function (remoteData) {\n      delete remoteData.cameras[cameraId];\n      return remoteData;\n    }).then(function () {\n      loadCameras();\n      callbacks.refresh();\n    }).then(function () {\n      syncClient.map(CAMERA_CONTROL_MAP_NAME(cameraId)).then(function (map) { map.removeMap(); });\n      syncClient.list(CAMERA_ALERTS_LIST_NAME(cameraId)).then(function (list) { list.removeList(); });\n    });\n  },\n\n  controlPreview: function (cameraId) {\n    var camera = cameras[cameraId];\n    camera.controlMap.set(\"preview\", camera.control.preview)\n    .then(function () {\n      console.log(\"switchPreview updated\", cameraId, camera.control.preview);\n    }).catch(function (err) {\n      console.err(\"switchPreview failed\", err);\n    });\n  },\n\n  controlArm: function (cameraId) {\n    var camera = cameras[cameraId];\n    camera.controlMap.set(\"arm\", camera.control.arm)\n    .then(function () {\n      console.log(\"switchArm updated\", cameraId, camera.control.arm);\n    }).catch(function (err) {\n      console.err(\"switchArm failed\", err);\n    });\n  },\n\n  disarm: function (cameraId) {\n    var camera = cameras[cameraId];\n    camera.controlMap.set(\"arm\", {\n      enabled: camera.control.arm.enabled,\n      responded_alarm: camera.control.alarm.id\n    })\n    .then(function () {\n      console.log(\"disarm updated\", cameraId, camera.control.arm);\n    }).catch(function (err) {\n      console.err(\"disarm failed\", err);\n    });\n  },\n\n  getAlerts: function (cameraId, callback) {\n    syncClient.list(CAMERA_ALERTS_LIST_NAME(cameraId)).then(function (list) {\n      return list.getItems({ order: \"desc\" }).then(function (page) {\n        console.log(\"getAlerts\", page);\n        callback(page.items);\n      });\n    }).catch(function (err) {\n      console.error(\"getAlerts failed\", err);\n    });\n  },\n\n  getNextArchivedSnapshot: function (cameraId, alertId, archiveId, callback) {\n    syncClient.list(CAMERA_ARCHIVES_LIST_NAME(cameraId, alertId)).then(function (list) {\n      return list.get(archiveId);\n    }).then(function (item) {\n      fetchSnapshotTmpUrl(item.data.value.mcs_url, function (snapshotTmpUrl) {\n        callback(snapshotTmpUrl);\n      });\n    }).catch(function (err) {\n      console.info(\"getNextArchivedSnapshot failed\", err);\n      callback(null);\n    });\n  },\n\n  init: function () {\n    var that = this;\n    this.updateToken(function (token) {\n      that.fetchConfiguration().then(function () {\n        callbacks.refresh();\n      }).then(function () {\n        that.initialized.resolve();\n      });\n    });\n  }\n  };\n};\n\n\n/***/ }),\n\n/***/ 197:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar $ = __webpack_require__(4);\n\nvar cameraListView = {\n  templateUrl: __webpack_require__(286),\n\n  init: function (app, $scope) {\n    $scope.cameras = app.cameras;\n    $scope.newCamera = {};\n    $scope.addCamera = function () {\n      app.addCamera(angular.copy($scope.newCamera), function (err, cameraAdded) {\n        if (err) {\n          $('#add-camera-failed').text(JSON.stringify(err));          \n        } else {\n          $scope.editedCameraInfo = cameraAdded;\n          $('.add-camera').hide();\n          $('.add-camera-show').fadeIn(333);          \n          $scope.$apply();\n        }\n      });\n    };\n    $scope.editCamera = function (cameraId) {\n      $scope.editedCameraInfo = app.cameras[cameraId].info;\n      $('.edit-camera').fadeIn(333);\n    };\n    $scope.updateCamera = function () {\n      app.updateCamera(angular.copy($scope.editedCameraInfo), function (err) {\n        if (err) {\n          $('#edit-camera-failed').text(JSON.stringify(err));          \n        } else {\n          $('.edit-camera').hide();\n          $scope.$apply();\n        }\n      });\n    };\n    $scope.deleteCamera = function (cameraId) {\n      app.deleteCamera(cameraId);\n    };\n    $scope.regenTokenForCamera = function (cameraId) {\n      app.regenToken(cameraId, function (cameraUpdated) {\n        $scope.editedCameraInfo = cameraUpdated;\n      });\n    };\n\n    $('.add-camera-show').click(function() {\n      $(this).hide();\n      $('.add-camera').fadeIn(333);\n    });\n    $('.add-camera-cancel').click(function() {\n      $('.add-camera').hide();\n      $('.add-camera-show').fadeIn(333);\n    });\n\n    $('.edit-camera-cancel').click(function() {\n      $scope.editedCameraInfo = null;\n      $('.edit-camera').hide();\n      $scope.$apply();\n    });\n  },\n};\n\nmodule.exports = cameraListView;\n\n\n/***/ }),\n\n/***/ 198:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar $ = __webpack_require__(4);\n\nvar cameraView = {\n  templateUrl: __webpack_require__(287),\n\n  init: function (app, cameraId, $scope) {\n    $scope.camera = app.cameras[cameraId];\n    $scope.selectedAlertChanged = function () {\n      console.log(\"selectedAlertChanged\", $scope.selectedAlertId);\n      $scope.selectedArchiveId = 0;\n      $scope.selectNewArchiveId(0);\n      $scope.snapshotTmpUrl = null;\n    };\n    $scope.selectNewArchiveId = function (newArchiveId) {\n      console.log(\"selectNewArchiveId start\", $scope.selectedAlertId, newArchiveId);\n      app.getNextArchivedSnapshot(cameraId, $scope.selectedAlertId, newArchiveId, function (snapshotTmpUrl) {\n        if (snapshotTmpUrl) {\n          console.log(\"selectNewArchiveId accepted\", $scope.selectedAlertId, snapshotTmpUrl);\n          $scope.selectedArchiveId = newArchiveId;\n          $scope.snapshotTmpUrl = snapshotTmpUrl;\n          $scope.$apply();\n        } else {\n          console.log(\"selectNewArchiveId rejected\", $scope.selectedAlertId);\n        }\n      });\n    };\n    $scope.selectPreviousArchive = function () {\n      if ($scope.selectedArchiveId > 0) {\n        $scope.selectNewArchiveId($scope.selectedArchiveId - 1);\n      }\n    };\n    $scope.selectNextArchive = function () {\n        $scope.selectNewArchiveId($scope.selectedArchiveId + 1);\n    };\n    app.getAlerts(cameraId, function (alerts) {\n      $scope.alerts = alerts;\n      $scope.selectedAlertId = alerts[0].data.index+\"\";\n      $scope.$apply();\n      $scope.selectedAlertChanged();\n    });\n  }\n};\n\nmodule.exports = cameraView;\n\n\n/***/ }),\n\n/***/ 199:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar dashboardView = {\n  templateUrl: __webpack_require__(288),\n\n  init: function (app, $scope) {\n    $scope.cameras = app.cameras;\n    $scope.noCamera = function () { return Object.keys(app.cameras).length === 0; }\n    $scope.switchPreview = function (cameraId) {\n      app.controlPreview(cameraId);\n    };\n    $scope.switchArm = function (cameraId) {\n      app.controlArm(cameraId);\n    };\n    $scope.disarm = function (cameraId) {\n      app.disarm(cameraId);\n    };\n  }\n};\n\nmodule.exports = dashboardView;\n\n\n/***/ }),\n\n/***/ 201:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"index.html\";\n\n/***/ }),\n\n/***/ 202:\n/***/ (function(module, exports) {\n\nmodule.exports = angular;\n\n/***/ }),\n\n/***/ 203:\n/***/ (function(module, exports) {\n\nmodule.exports = undefined;\n\n/***/ }),\n\n/***/ 204:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nconst $ = __webpack_require__(4);\nconst angular = __webpack_require__(202);\nconst moment = __webpack_require__(0);\n__webpack_require__(203);\n\nconst MOMENT_FORMAT = \"MMM DD YYYY @ hh:mm\";\n\n// style sheets\n__webpack_require__(28);\n__webpack_require__(29);\n\n// index.html\n__webpack_require__(201);\n\nconst dashboardView = __webpack_require__(199);\nconst cameraListView = __webpack_require__(197);\nconst cameraView = __webpack_require__(198);\n\nvar currentView;\nvar $currentViewScope;\n\nvar App = __webpack_require__(196);\nwindow.app = new App({\n  refresh: function () {\n    $currentViewScope.$apply();\n  }\n});\n\nangular\n  .module(\"app\", [\n    'ngRoute'\n  ])\n  .controller('DashboardViewCtrl', ['$scope', function ($scope) {\n    $currentViewScope = $scope;\n    currentView = dashboardView;\n    $.when(app.initialized).done(function () {\n      dashboardView.init(app, $scope);\n    });\n  }])\n  .controller('CameraListViewCtrl', ['$scope', function ($scope) {\n    $currentViewScope = $scope;\n    currentView = cameraListView;\n    $.when(app.initialized).done(function () {\n      cameraListView.init(app, $scope);\n    });\n  }])\n  .controller('CameraView', ['$routeParams', '$scope', function ($routeParams, $scope) {\n    $currentViewScope = $scope;\n    currentView = cameraView;\n    $.when(app.initialized).done(function () {\n      cameraView.init(app, $routeParams.id, $scope);\n    });\n  }])\n  .config(['$routeProvider', function ($routeProvider) {\n    $routeProvider\n      .when('/dashboard', { controller: 'DashboardViewCtrl', templateUrl: dashboardView.templateUrl } )\n      .when('/cameras', { controller: 'CameraListViewCtrl', templateUrl: cameraListView.templateUrl } )\n      .when('/cameras/:id', { controller: 'CameraView', templateUrl: cameraView.templateUrl } )\n      .otherwise({ redirectTo: '/dashboard' }); \n  }])\n  .filter('moment', function () {\n    return function (datestr) {\n      return moment(datestr).format(MOMENT_FORMAT);\n    };\n  });\n\n\n/***/ }),\n\n/***/ 286:\n/***/ (function(module, exports) {\n\nvar path = 'views/camera_list.html';\nvar html = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h1 id=\\\"tables\\\">Cameras</h1>\\n    </div>\\n\\n    <div class=\\\"bs-component\\\">\\n      <table class=\\\"table table-striped table-hover \\\">\\n        <thead>\\n          <tr>\\n            <th>ID</th>\\n            <th>Name</th>\\n            <th>Contact Number</th>\\n            <th>Twilio SID</th>\\n            <th>Token</th>\\n            <th>Created</th>\\n            <th>Actions</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr ng-repeat=\\\"camera in cameras\\\" ng-class=\\\"{'text-success': editedCameraInfo.id === camera.info.id}\\\">\\n            <td>{{ camera.info.id }}</td>\\n            <td>{{ camera.info.name }}</td>\\n            <td>{{ camera.info.contact_number }}</td>\\n            <td>{{ camera.info.twilio_sim_sid }}</td>\\n            <td>\\n                <small ng-if=\\\"editedCameraInfo.id === camera.info.id\\\" class=\\\"text-warning\\\">{{ editedCameraInfo.token }}</small>\\n                <button ng-click=\\\"regenTokenForCamera(camera.info.id)\\\" ng-if=\\\"editedCameraInfo.id !== camera.info.id\\\" class=\\\"btn btn-xs btn-success\\\">Regenerate</button>\\n            </td>\\n            <td>{{ camera.info.created_at | moment }}</td>\\n            <td>\\n                <button ng-click=\\\"editCamera(camera.info.id)\\\" class=\\\"btn btn-xs btn-success\\\">Edit</button>\\n                &nbsp;\\n                <button ng-click=\\\"deleteCamera(camera.info.id)\\\" class=\\\"btn btn-xs btn-danger\\\">Delete</button>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    <div id=\\\"source-button\\\" class=\\\"btn btn-primary btn-xs\\\" style=\\\"display: none;\\\">&lt; &gt;</div></div><!-- /example -->\\n  </div>\\n  <div class=\\\"divider col-lg-10 bg-primary\\\"></div>\\n</div>\\n\\n<a class=\\\"btn btn-primary add-camera-show\\\">Add New Camera</a>\\n<div class=\\\"row add-camera\\\">\\n  <div class=\\\"col-lg-6\\\">\\n    <form class=\\\"form-horizontal\\\" ng-submit=\\\"addCamera()\\\">\\n      <fieldset>\\n        <legend>New camera</legend>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"id\\\" class=\\\"col-lg-2 control-label\\\">Id</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newCamera.id\\\" id=\\\"id\\\" placeholder=\\\"ID\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\" class=\\\"col-lg-2 control-label\\\">Name</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newCamera.name\\\" id=\\\"name\\\" placeholder=\\\"Name\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"contact_number\\\" class=\\\"col-lg-2 control-label\\\">Contact Number</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newCamera.contact_number\\\" id=\\\"contact_number\\\" placeholder=\\\"4123620201\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"twilio_sim_sid\\\" class=\\\"col-lg-2 control-label\\\">Twilio SIM SID</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newCamera.twilio_sim_sid\\\" id=\\\"twilio_sim_sid\\\" placeholder=\\\"Twilio SIM SID\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-lg-10 col-lg-offset-2\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n            <button type=\\\"reset\\\" class=\\\"btn btn-default add-camera-cancel\\\">Cancel</button>\\n          </div>\\n        </div>\\n\\n        <p class=\\\"text-warning\\\" id=\\\"add-camera-failed\\\"></p>\\n      </fieldset>\\n    </form>\\n  </div>\\n</div>\\n\\n<div class=\\\"row edit-camera\\\">\\n  <div class=\\\"col-lg-6\\\">\\n    <form class=\\\"form-horizontal\\\" ng-submit=\\\"updateCamera()\\\">\\n      <fieldset>\\n        <legend>Edit camera</legend>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"id\\\" class=\\\"col-lg-2 control-label\\\">Id</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"editedCameraInfo.id\\\" id=\\\"id\\\" value=\\\"{{ editedCameraInfo.id }}\\\" placeholder=\\\"ID\\\" disabled>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\" class=\\\"col-lg-2 control-label\\\">Name</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"editedCameraInfo.name\\\" id=\\\"name\\\" value=\\\"{{ editedCameraInfo.name }}\\\" placeholder=\\\"Name\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"contact_number\\\" class=\\\"col-lg-2 control-label\\\">Contact Number</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"editedCameraInfo.contact_number\\\" id=\\\"contact_number\\\" value=\\\"{{ editedCameraInfo.contact_number }}\\\" placeholder=\\\"4123620201\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"twilio_sim_sid\\\" class=\\\"col-lg-2 control-label\\\">Twilio SIM SID</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"editedCameraInfo.twilio_sim_sid\\\" id=\\\"twilio_sim_sid\\\" value=\\\"{{ editedCameraInfo.twilio_sim_sid }}\\\" placeholder=\\\"Twilio SIM SID\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-lg-10 col-lg-offset-2\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n            <button type=\\\"reset\\\" class=\\\"btn btn-default edit-camera-cancel\\\">Cancel</button>\\n          </div>\\n        </div>\\n\\n        <p class=\\\"text-warning\\\" id=\\\"edit-camera-failed\\\"></p>\\n      </fieldset>\\n    </form>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ 287:\n/***/ (function(module, exports) {\n\nvar path = 'views/camera_view.html';\nvar html = \"<h1>{{ camera.info.name }}</h1>\\n\\n<div class=\\\"alerts-list\\\">\\n  <h2>Alerts: </h2>\\n  <select class=\\\"form-control\\\" id=\\\"alertSelect\\\" ng-model=\\\"selectedAlertId\\\" ng-change=\\\"selectedAlertChanged()\\\">\\n    <option ng-repeat=\\\"alert in alerts\\\" value=\\\"{{alert.data.index}}\\\">{{alert.data.index}} : {{alert.data.value.datetime_utc | moment}}</option>\\n  </select>\\n</div>\\n\\n<div class=\\\"archive-view row\\\">\\n  <button class=\\\"btn btn-primary col-lg-2 pull-left\\\" ng-click=\\\"selectPreviousArchive()\\\">&lt;</button>\\n  <img class=\\\"col-lg-offset-2 col-lg-8 camera-feed\\\" ng-src=\\\"{{ snapshotTmpUrl }}\\\"/>\\n  <button class=\\\"btn btn-primary col-lg-2 pull-right\\\" ng-click=\\\"selectNextArchive()\\\">&gt;</button>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ 288:\n/***/ (function(module, exports) {\n\nvar path = 'views/dashboard.html';\nvar html = \"<h1>Active Cameras</h1>\\n\\n<h3 ng-show=\\\"noCamera()\\\" class=\\\"ng-show\\\">We aren't tracking any cameras right now.</h3>\\n\\n<div ng-repeat=\\\"camera in cameras\\\" class=\\\"jumbotron camera camera{{ camera.info.id }}\\\">\\n  <h3>\\n    {{ camera.info.name }}\\n    <a href=\\\"#!/cameras/{{ camera.info.id }}\\\">(Browse archived alarms)</a>\\n    <small><input type=\\\"checkbox\\\" ng-model=\\\"camera.control.preview.enabled\\\" ng-change=\\\"switchPreview(camera.info.id)\\\">Preview</small>\\n    <small><input type=\\\"checkbox\\\" ng-model=\\\"camera.control.arm.enabled\\\" ng-change=\\\"switchArm(camera.info.id)\\\">Armed</small>\\n  </h3>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-8 col-lg-offset-2 img-parent\\\">\\n      <img class=\\\"camera-feed\\\" ng-src=\\\"{{ camera.snapshot.img_url }}\\\" />\\n    </div>\\n  </div>\\n  <div class=\\\"row motion_stats\\\">\\n    <div class=\\\"col-lg-4 col-lg-offset-4\\\">\\n      <div class=\\\"alert alert-success\\\" ng-if=\\\"camera.control.alarm.id === camera.control.arm.responded_alarm\\\">\\n        <strong>No Active Alarm</strong>\\n      </div>\\n      <button class=\\\"alert alert-danger\\\" ng-if=\\\"camera.control.alarm.id !== camera.control.arm.responded_alarm\\\" ng-click=\\\"disarm(camera.info.id)\\\">\\n        <strong>Dismiss Alarm</strong>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ 313:\n/***/ (function(module, exports) {\n\nmodule.exports = Twilio.Sync;\n\n/***/ })\n\n},[204]);\n\n\n// WEBPACK FOOTER //\n// index.js","'use strict';\n\nconst APP_CONFIGURATION_DOCUMENT_NAME = \"app.configuration\";\nfunction CAMERA_SNAPSHOT_DOCUMENT_NAME(cameraId) { return \"cameras.\" + cameraId + \".snapshot\"; }\nfunction CAMERA_CONTROL_MAP_NAME(cameraId) { return \"cameras.\" + cameraId + \".control\"; }\nfunction CAMERA_ALERTS_LIST_NAME(cameraId) { return \"cameras.\" + cameraId + \".alerts\"; }\nfunction CAMERA_ARCHIVES_LIST_NAME(cameraId, alertId) { return \"cameras.\" + cameraId + \".archives.\" + alertId; }\n\nmodule.exports = function(callbacks) {\n  const $ = require(\"jquery\");\n  const crypto = require(\"crypto\");\n  const SyncClient = require(\"twilio-sync\").Client;\n  var syncClient;\n  var token;\n  var auth = \"username=twilio&pincode=928462\";\n  var configDocument;\n\n  var cameras = {};\n\n  function randomString(len) {\n      var charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n      var randomString = '';\n      for (var i = 0; i < len; i++) {\n          var randomPoz = Math.floor(Math.random() * charSet.length);\n          randomString += charSet.substring(randomPoz,randomPoz+1);\n      }\n      return randomString;\n  }\n\n  function fetchSnapshotTmpUrl(mcs_url, callback) {\n    $.ajax({\n      type: \"GET\",\n      url: mcs_url,\n      dataType: 'json',\n      beforeSend: function (xhr) { xhr.setRequestHeader('X-Twilio-Token', token); },\n      success: function (data, status, xhr) {\n        callback(data.links.content_direct_temporary);\n      }\n    });\n  }\n\n  function fetchCameraSnapshotTmpUrl(camera) {\n    fetchSnapshotTmpUrl(camera.snapshot.mcs_url, function (snapshotTmpUrl) {\n        camera.snapshot.img_url = snapshotTmpUrl;\n        callbacks.refresh();\n    });\n  }\n\n  function fetchSnapshot(camera) {\n    syncClient.document(CAMERA_SNAPSHOT_DOCUMENT_NAME(camera.info.id)).then(function (doc) {\n      camera.snapshotDocument = doc;\n      camera.snapshot = doc.value;\n      fetchCameraSnapshotTmpUrl(camera);\n      doc.on(\"updated\", function (data) {\n        console.log(\"camera snapshot updated\", camera.info.id, JSON.stringify(data));\n        camera.snapshot = data;\n        fetchCameraSnapshotTmpUrl(camera);\n      });\n    });\n  }\n\n  function fetchControl(camera) {\n    syncClient.map(CAMERA_CONTROL_MAP_NAME(camera.info.id)).then(function (map) {\n      Promise.all([\n        map.get(\"preview\"),\n        map.get(\"alarm\"),\n        map.get(\"arm\")\n      ]).then(function (items) {\n        camera.controlMap = map;\n        camera.control = {\n          preview : items[0].value,\n          alarm : items[1].value,\n          arm : items[2].value,\n        };\n        console.log(\"camera control fetched\", camera.info.id, JSON.stringify(camera.control));\n        map.on(\"itemUpdated\", function (data) {\n          console.log(\"camera control updated\", camera.info.id, data.key, JSON.stringify(data.value));\n          camera.control[data.key] = data.value;\n          callbacks.refresh();\n        });\n        callbacks.refresh();\n      });\n    });\n  }\n\n  function loadCameras() {\n    var invalidCameras = [];\n\n    for (var cameraId in configDocument.value.cameras) {\n      var camera = configDocument.value.cameras[cameraId];\n      if (camera.id === cameraId &&\n          typeof (camera.name) === \"string\" &&\n          typeof(camera.contact_number) === \"string\" &&\n          typeof(camera.twilio_sim_sid) === \"string\") {\n        if (cameraId in cameras) {\n          if (camera.name !== cameras[cameraId].info.name ||\n              camera.contact_number !== cameras[cameraId].info.contact_number ||\n              camera.twilio_sim_sid !== cameras[cameraId].info.twilio_sim_sid) {\n            console.log(\"Updating camera\", camera);\n            cameras[cameraId].info = camera;\n          }\n        } else {\n          console.log(\"Loading new camera\", camera);\n          cameras[cameraId] = {\n            info: camera\n          };\n          fetchSnapshot(cameras[cameraId]);\n          fetchControl(cameras[cameraId]);\n        }\n      } else {\n        console.warn(\"Invalid camera configuration, removing from the list: \", cameraId, camera);\n        invalidCameras.push(cameraId);\n      }\n    }\n    for (var cameraId in cameras) {\n      if (!(cameraId in configDocument.value.cameras)) {\n        console.log(\"Deleting camera\", camera);\n        if (cameras[cameraId].snapshotDocument) {\n          cameras[cameraId].snapshotDocument.removeAllListeners('updated');\n        }\n        if (cameras[cameraId].controlMap) {\n          cameras[cameraId].controlMap.removeAllListeners('itemUpdated');\n        }\n        delete cameras[cameraId];\n      }\n    }\n\n    return invalidCameras;\n  }\n\n  function cameraInfoCheck(camera, callback) {\n    if (!camera.id || !camera.id.match(/^[a-zA-Z0-9]+$/))  { callback(\"camera id is invalid: \" + camera.id); return false; }\n    if (!camera.name) { callback(\"camera name is not specified\"); return false; }\n    if (!camera.contact_number || !camera.contact_number.match(/^[0-9]+$/)) { callback(\"camera contact number is invalid(only digits allowed): \" + camera.contact_number); return false; }\n    if (!camera.twilio_sim_sid || !camera.twilio_sim_sid.match(/^DE[a-z0-9]{32}$/)) { callback(\"camera sim SID is invalid: \" + camera.twilio_sim_sid); return false; }\n    return true;\n  }\n\n  function genToken() {\n    var token = randomString(16);\n    var hash = crypto.createHash('sha512').update(token).digest(\"hex\");\n    return { token: token, hash: hash };\n  }\n\n  return {\n  initialized: $.Deferred(),\n\n  cameras: cameras,\n\n  updateToken: function (cb) {\n    var that = this;\n    return $.get(\"/userauthenticate?\" + auth, function (result) {\n      if (result.success) {\n        console.log(\"token updated:\", result);\n        token = result.token;\n        if (syncClient) {\n            syncClient.updateToken(token);\n        } else {\n            syncClient = new SyncClient(token);\n        }\n        if (cb) cb(token);\n        setTimeout(that.updateToken.bind(that), result.ttl*1000 * 0.96); // update token slightly in adance of ttl\n      } else {\n        console.error(\"failed to authenticate the user: \", result.error);\n      }\n    }).fail(function (jqXHR, textStatus, error) {\n      console.error(\"failed to send authentication request:\", textStatus, error);\n      setTimeout(that.updateToken.bind(that), 10000); // retry in 10 seconds\n    });\n  },\n\n  fetchConfiguration: function () {\n    return syncClient.document(APP_CONFIGURATION_DOCUMENT_NAME).then(function (doc) {\n      configDocument = doc;\n      var newDoc = null;\n      var invalidCameras;\n\n      if (doc.value.cameras) {\n        invalidCameras = loadCameras();\n        if (invalidCameras.length) {\n          if (null ===  newDoc) newDoc = $.extend(true, doc.value, {});\n          invalidCameras.forEach(function (idOfInvalidCamera) {\n            delete newDoc.cameras[idOfInvalidCamera];\n          });\n        }\n      } else {\n        console.warn(\"cameras is not configured, creating an empty list\");\n        if (null ===  newDoc) newDoc = $.extend(true, doc.value, {});\n        newDoc.cameras = {};\n      }\n      return newDoc;\n    }).then(function (newDoc) {\n      if (newDoc !== null) {\n        return configDocument.set(newDoc).then(function () {\n          console.log(\"app configuration updated with new value:\", newDoc);\n        });\n      }\n    });\n  },\n\n  addCamera: function (newCamera, callback) {\n    if (!cameraInfoCheck(newCamera, callback)) return;\n    if (newCamera.id in configDocument.value.cameras) return callback(\"Camera with the same ID exists\");\n    newCamera.created_at = (new Date()).getTime();\n\n    var t = genToken();\n    newCamera.hash = t.hash;\n\n    configDocument.mutate(function (remoteData) {\n      if (!remoteData.cameras) remoteData.cameras = {};\n      remoteData.cameras[newCamera.id] = newCamera;\n      return remoteData;\n    }).then(function () {\n      // create necessary objects\n      return Promise.all([\n        syncClient.map(CAMERA_CONTROL_MAP_NAME(newCamera.id)).then(function (controlMap) {\n          return Promise.all[\n            controlMap.set('alarm', { id: -1 }),\n            controlMap.set('arm', { enabled: true, responded_alarm: -1}),\n            controlMap.set('preview', { enabled : false })\n          ];\n        }),\n        syncClient.list(CAMERA_ALERTS_LIST_NAME(newCamera.id)),\n      ]);\n    }).then(function () {\n      loadCameras();\n      // make token temporarily visible\n      callback(null, $.extend(true, cameras[newCamera.id].info, { token: t.token }));\n      callbacks.refresh();\n    }).catch(function (err) {\n      callback(err);\n    });\n  },\n\n  updateCamera: function (updatedCamera, callback) {\n    configDocument.mutate(function (remoteData) {\n      if (updatedCamera.id in remoteData.cameras) {\n        remoteData.cameras[updatedCamera.id] = $.extend(true, updatedCamera, {\n            hash: remoteData.cameras[updatedCamera.id].hash\n          });\n      } else {\n        callback(\"Camera is not in the list\");\n      }\n      return remoteData;\n    }).then(function () {\n      loadCameras();\n      callback(null);\n      callbacks.refresh();\n    }).catch(function (err) {\n      callback(err);\n    });\n  },\n\n  regenToken: function (cameraId, callback) {\n    var t = genToken();\n    configDocument.mutate(function (remoteData) {\n      if (cameraId in remoteData.cameras) {\n        remoteData.cameras[cameraId].hash = t.hash;\n      } else {\n        throw \"unknown camera: \" + cameraId;\n      }\n      return remoteData;\n    }).then(function () {\n      loadCameras();\n      // make token temporarily visible\n      callback($.extend(true, cameras[cameraId].info, { token: t.token }));\n      callbacks.refresh();\n    }).catch(function (err) {\n      // ignore error\n      console.error(\"regenToken\", err);\n    });\n  },\n\n  deleteCamera: function (cameraId) {\n    configDocument.mutate(function (remoteData) {\n      delete remoteData.cameras[cameraId];\n      return remoteData;\n    }).then(function () {\n      loadCameras();\n      callbacks.refresh();\n    }).then(function () {\n      syncClient.map(CAMERA_CONTROL_MAP_NAME(cameraId)).then(function (map) { map.removeMap(); });\n      syncClient.list(CAMERA_ALERTS_LIST_NAME(cameraId)).then(function (list) { list.removeList(); });\n    });\n  },\n\n  controlPreview: function (cameraId) {\n    var camera = cameras[cameraId];\n    camera.controlMap.set(\"preview\", camera.control.preview)\n    .then(function () {\n      console.log(\"switchPreview updated\", cameraId, camera.control.preview);\n    }).catch(function (err) {\n      console.err(\"switchPreview failed\", err);\n    });\n  },\n\n  controlArm: function (cameraId) {\n    var camera = cameras[cameraId];\n    camera.controlMap.set(\"arm\", camera.control.arm)\n    .then(function () {\n      console.log(\"switchArm updated\", cameraId, camera.control.arm);\n    }).catch(function (err) {\n      console.err(\"switchArm failed\", err);\n    });\n  },\n\n  disarm: function (cameraId) {\n    var camera = cameras[cameraId];\n    camera.controlMap.set(\"arm\", {\n      enabled: camera.control.arm.enabled,\n      responded_alarm: camera.control.alarm.id\n    })\n    .then(function () {\n      console.log(\"disarm updated\", cameraId, camera.control.arm);\n    }).catch(function (err) {\n      console.err(\"disarm failed\", err);\n    });\n  },\n\n  getAlerts: function (cameraId, callback) {\n    syncClient.list(CAMERA_ALERTS_LIST_NAME(cameraId)).then(function (list) {\n      return list.getItems({ order: \"desc\" }).then(function (page) {\n        console.log(\"getAlerts\", page);\n        callback(page.items);\n      });\n    }).catch(function (err) {\n      console.error(\"getAlerts failed\", err);\n    });\n  },\n\n  getNextArchivedSnapshot: function (cameraId, alertId, archiveId, callback) {\n    syncClient.list(CAMERA_ARCHIVES_LIST_NAME(cameraId, alertId)).then(function (list) {\n      return list.get(archiveId);\n    }).then(function (item) {\n      fetchSnapshotTmpUrl(item.data.value.mcs_url, function (snapshotTmpUrl) {\n        callback(snapshotTmpUrl);\n      });\n    }).catch(function (err) {\n      console.info(\"getNextArchivedSnapshot failed\", err);\n      callback(null);\n    });\n  },\n\n  init: function () {\n    var that = this;\n    this.updateToken(function (token) {\n      that.fetchConfiguration().then(function () {\n        callbacks.refresh();\n      }).then(function () {\n        that.initialized.resolve();\n      });\n    });\n  }\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/app.js\n// module id = 196\n// module chunks = 0","var $ = require(\"jquery\");\n\nvar cameraListView = {\n  templateUrl: require(\"../views/camera_list.html\"),\n\n  init: function (app, $scope) {\n    $scope.cameras = app.cameras;\n    $scope.newCamera = {};\n    $scope.addCamera = function () {\n      app.addCamera(angular.copy($scope.newCamera), function (err, cameraAdded) {\n        if (err) {\n          $('#add-camera-failed').text(JSON.stringify(err));          \n        } else {\n          $scope.editedCameraInfo = cameraAdded;\n          $('.add-camera').hide();\n          $('.add-camera-show').fadeIn(333);          \n          $scope.$apply();\n        }\n      });\n    };\n    $scope.editCamera = function (cameraId) {\n      $scope.editedCameraInfo = app.cameras[cameraId].info;\n      $('.edit-camera').fadeIn(333);\n    };\n    $scope.updateCamera = function () {\n      app.updateCamera(angular.copy($scope.editedCameraInfo), function (err) {\n        if (err) {\n          $('#edit-camera-failed').text(JSON.stringify(err));          \n        } else {\n          $('.edit-camera').hide();\n          $scope.$apply();\n        }\n      });\n    };\n    $scope.deleteCamera = function (cameraId) {\n      app.deleteCamera(cameraId);\n    };\n    $scope.regenTokenForCamera = function (cameraId) {\n      app.regenToken(cameraId, function (cameraUpdated) {\n        $scope.editedCameraInfo = cameraUpdated;\n      });\n    };\n\n    $('.add-camera-show').click(function() {\n      $(this).hide();\n      $('.add-camera').fadeIn(333);\n    });\n    $('.add-camera-cancel').click(function() {\n      $('.add-camera').hide();\n      $('.add-camera-show').fadeIn(333);\n    });\n\n    $('.edit-camera-cancel').click(function() {\n      $scope.editedCameraInfo = null;\n      $('.edit-camera').hide();\n      $scope.$apply();\n    });\n  },\n};\n\nmodule.exports = cameraListView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/cameraListView.js\n// module id = 197\n// module chunks = 0","var $ = require(\"jquery\");\n\nvar cameraView = {\n  templateUrl: require(\"../views/camera_view.html\"),\n\n  init: function (app, cameraId, $scope) {\n    $scope.camera = app.cameras[cameraId];\n    $scope.selectedAlertChanged = function () {\n      console.log(\"selectedAlertChanged\", $scope.selectedAlertId);\n      $scope.selectedArchiveId = 0;\n      $scope.selectNewArchiveId(0);\n      $scope.snapshotTmpUrl = null;\n    };\n    $scope.selectNewArchiveId = function (newArchiveId) {\n      console.log(\"selectNewArchiveId start\", $scope.selectedAlertId, newArchiveId);\n      app.getNextArchivedSnapshot(cameraId, $scope.selectedAlertId, newArchiveId, function (snapshotTmpUrl) {\n        if (snapshotTmpUrl) {\n          console.log(\"selectNewArchiveId accepted\", $scope.selectedAlertId, snapshotTmpUrl);\n          $scope.selectedArchiveId = newArchiveId;\n          $scope.snapshotTmpUrl = snapshotTmpUrl;\n          $scope.$apply();\n        } else {\n          console.log(\"selectNewArchiveId rejected\", $scope.selectedAlertId);\n        }\n      });\n    };\n    $scope.selectPreviousArchive = function () {\n      if ($scope.selectedArchiveId > 0) {\n        $scope.selectNewArchiveId($scope.selectedArchiveId - 1);\n      }\n    };\n    $scope.selectNextArchive = function () {\n        $scope.selectNewArchiveId($scope.selectedArchiveId + 1);\n    };\n    app.getAlerts(cameraId, function (alerts) {\n      $scope.alerts = alerts;\n      $scope.selectedAlertId = alerts[0].data.index+\"\";\n      $scope.$apply();\n      $scope.selectedAlertChanged();\n    });\n  }\n};\n\nmodule.exports = cameraView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/cameraView.js\n// module id = 198\n// module chunks = 0","var dashboardView = {\n  templateUrl: require(\"../views/dashboard.html\"),\n\n  init: function (app, $scope) {\n    $scope.cameras = app.cameras;\n    $scope.noCamera = function () { return Object.keys(app.cameras).length === 0; }\n    $scope.switchPreview = function (cameraId) {\n      app.controlPreview(cameraId);\n    };\n    $scope.switchArm = function (cameraId) {\n      app.controlArm(cameraId);\n    };\n    $scope.disarm = function (cameraId) {\n      app.disarm(cameraId);\n    };\n  }\n};\n\nmodule.exports = dashboardView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/dashboardView.js\n// module id = 199\n// module chunks = 0","module.exports = __webpack_public_path__ + \"index.html\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./index.html\n// module id = 201\n// module chunks = 0","module.exports = angular;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"angular\"\n// module id = 202\n// module chunks = 0","module.exports = undefined;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"amd\":\"angular-route\"}\n// module id = 203\n// module chunks = 0","'use strict';\n\nconst $ = require(\"jquery\");\nconst angular = require(\"angular\");\nconst moment = require(\"moment\");\nrequire(\"angular-route\");\n\nconst MOMENT_FORMAT = \"MMM DD YYYY @ hh:mm\";\n\n// style sheets\nrequire(\"bootstrap-webpack\");\nrequire(\"../scss/main.scss\");\n\n// index.html\nrequire(\"../index.html\");\n\nconst dashboardView = require(\"./dashboardView\");\nconst cameraListView = require(\"./cameraListView\");\nconst cameraView = require(\"./cameraView\");\n\nvar currentView;\nvar $currentViewScope;\n\nvar App = require(\"./app\");\nwindow.app = new App({\n  refresh: function () {\n    $currentViewScope.$apply();\n  }\n});\n\nangular\n  .module(\"app\", [\n    'ngRoute'\n  ])\n  .controller('DashboardViewCtrl', ['$scope', function ($scope) {\n    $currentViewScope = $scope;\n    currentView = dashboardView;\n    $.when(app.initialized).done(function () {\n      dashboardView.init(app, $scope);\n    });\n  }])\n  .controller('CameraListViewCtrl', ['$scope', function ($scope) {\n    $currentViewScope = $scope;\n    currentView = cameraListView;\n    $.when(app.initialized).done(function () {\n      cameraListView.init(app, $scope);\n    });\n  }])\n  .controller('CameraView', ['$routeParams', '$scope', function ($routeParams, $scope) {\n    $currentViewScope = $scope;\n    currentView = cameraView;\n    $.when(app.initialized).done(function () {\n      cameraView.init(app, $routeParams.id, $scope);\n    });\n  }])\n  .config(['$routeProvider', function ($routeProvider) {\n    $routeProvider\n      .when('/dashboard', { controller: 'DashboardViewCtrl', templateUrl: dashboardView.templateUrl } )\n      .when('/cameras', { controller: 'CameraListViewCtrl', templateUrl: cameraListView.templateUrl } )\n      .when('/cameras/:id', { controller: 'CameraView', templateUrl: cameraView.templateUrl } )\n      .otherwise({ redirectTo: '/dashboard' }); \n  }])\n  .filter('moment', function () {\n    return function (datestr) {\n      return moment(datestr).format(MOMENT_FORMAT);\n    };\n  });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/index.js\n// module id = 204\n// module chunks = 0","var path = 'views/camera_list.html';\nvar html = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h1 id=\\\"tables\\\">Cameras</h1>\\n    </div>\\n\\n    <div class=\\\"bs-component\\\">\\n      <table class=\\\"table table-striped table-hover \\\">\\n        <thead>\\n          <tr>\\n            <th>ID</th>\\n            <th>Name</th>\\n            <th>Contact Number</th>\\n            <th>Twilio SID</th>\\n            <th>Token</th>\\n            <th>Created</th>\\n            <th>Actions</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr ng-repeat=\\\"camera in cameras\\\" ng-class=\\\"{'text-success': editedCameraInfo.id === camera.info.id}\\\">\\n            <td>{{ camera.info.id }}</td>\\n            <td>{{ camera.info.name }}</td>\\n            <td>{{ camera.info.contact_number }}</td>\\n            <td>{{ camera.info.twilio_sim_sid }}</td>\\n            <td>\\n                <small ng-if=\\\"editedCameraInfo.id === camera.info.id\\\" class=\\\"text-warning\\\">{{ editedCameraInfo.token }}</small>\\n                <button ng-click=\\\"regenTokenForCamera(camera.info.id)\\\" ng-if=\\\"editedCameraInfo.id !== camera.info.id\\\" class=\\\"btn btn-xs btn-success\\\">Regenerate</button>\\n            </td>\\n            <td>{{ camera.info.created_at | moment }}</td>\\n            <td>\\n                <button ng-click=\\\"editCamera(camera.info.id)\\\" class=\\\"btn btn-xs btn-success\\\">Edit</button>\\n                &nbsp;\\n                <button ng-click=\\\"deleteCamera(camera.info.id)\\\" class=\\\"btn btn-xs btn-danger\\\">Delete</button>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    <div id=\\\"source-button\\\" class=\\\"btn btn-primary btn-xs\\\" style=\\\"display: none;\\\">&lt; &gt;</div></div><!-- /example -->\\n  </div>\\n  <div class=\\\"divider col-lg-10 bg-primary\\\"></div>\\n</div>\\n\\n<a class=\\\"btn btn-primary add-camera-show\\\">Add New Camera</a>\\n<div class=\\\"row add-camera\\\">\\n  <div class=\\\"col-lg-6\\\">\\n    <form class=\\\"form-horizontal\\\" ng-submit=\\\"addCamera()\\\">\\n      <fieldset>\\n        <legend>New camera</legend>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"id\\\" class=\\\"col-lg-2 control-label\\\">Id</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newCamera.id\\\" id=\\\"id\\\" placeholder=\\\"ID\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\" class=\\\"col-lg-2 control-label\\\">Name</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newCamera.name\\\" id=\\\"name\\\" placeholder=\\\"Name\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"contact_number\\\" class=\\\"col-lg-2 control-label\\\">Contact Number</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newCamera.contact_number\\\" id=\\\"contact_number\\\" placeholder=\\\"4123620201\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"twilio_sim_sid\\\" class=\\\"col-lg-2 control-label\\\">Twilio SIM SID</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newCamera.twilio_sim_sid\\\" id=\\\"twilio_sim_sid\\\" placeholder=\\\"Twilio SIM SID\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-lg-10 col-lg-offset-2\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n            <button type=\\\"reset\\\" class=\\\"btn btn-default add-camera-cancel\\\">Cancel</button>\\n          </div>\\n        </div>\\n\\n        <p class=\\\"text-warning\\\" id=\\\"add-camera-failed\\\"></p>\\n      </fieldset>\\n    </form>\\n  </div>\\n</div>\\n\\n<div class=\\\"row edit-camera\\\">\\n  <div class=\\\"col-lg-6\\\">\\n    <form class=\\\"form-horizontal\\\" ng-submit=\\\"updateCamera()\\\">\\n      <fieldset>\\n        <legend>Edit camera</legend>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"id\\\" class=\\\"col-lg-2 control-label\\\">Id</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"editedCameraInfo.id\\\" id=\\\"id\\\" value=\\\"{{ editedCameraInfo.id }}\\\" placeholder=\\\"ID\\\" disabled>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\" class=\\\"col-lg-2 control-label\\\">Name</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"editedCameraInfo.name\\\" id=\\\"name\\\" value=\\\"{{ editedCameraInfo.name }}\\\" placeholder=\\\"Name\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"contact_number\\\" class=\\\"col-lg-2 control-label\\\">Contact Number</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"editedCameraInfo.contact_number\\\" id=\\\"contact_number\\\" value=\\\"{{ editedCameraInfo.contact_number }}\\\" placeholder=\\\"4123620201\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"twilio_sim_sid\\\" class=\\\"col-lg-2 control-label\\\">Twilio SIM SID</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"editedCameraInfo.twilio_sim_sid\\\" id=\\\"twilio_sim_sid\\\" value=\\\"{{ editedCameraInfo.twilio_sim_sid }}\\\" placeholder=\\\"Twilio SIM SID\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-lg-10 col-lg-offset-2\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n            <button type=\\\"reset\\\" class=\\\"btn btn-default edit-camera-cancel\\\">Cancel</button>\\n          </div>\\n        </div>\\n\\n        <p class=\\\"text-warning\\\" id=\\\"edit-camera-failed\\\"></p>\\n      </fieldset>\\n    </form>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./views/camera_list.html\n// module id = 286\n// module chunks = 0","var path = 'views/camera_view.html';\nvar html = \"<h1>{{ camera.info.name }}</h1>\\n\\n<div class=\\\"alerts-list\\\">\\n  <h2>Alerts: </h2>\\n  <select class=\\\"form-control\\\" id=\\\"alertSelect\\\" ng-model=\\\"selectedAlertId\\\" ng-change=\\\"selectedAlertChanged()\\\">\\n    <option ng-repeat=\\\"alert in alerts\\\" value=\\\"{{alert.data.index}}\\\">{{alert.data.index}} : {{alert.data.value.datetime_utc | moment}}</option>\\n  </select>\\n</div>\\n\\n<div class=\\\"archive-view row\\\">\\n  <button class=\\\"btn btn-primary col-lg-2 pull-left\\\" ng-click=\\\"selectPreviousArchive()\\\">&lt;</button>\\n  <img class=\\\"col-lg-offset-2 col-lg-8 camera-feed\\\" ng-src=\\\"{{ snapshotTmpUrl }}\\\"/>\\n  <button class=\\\"btn btn-primary col-lg-2 pull-right\\\" ng-click=\\\"selectNextArchive()\\\">&gt;</button>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./views/camera_view.html\n// module id = 287\n// module chunks = 0","var path = 'views/dashboard.html';\nvar html = \"<h1>Active Cameras</h1>\\n\\n<h3 ng-show=\\\"noCamera()\\\" class=\\\"ng-show\\\">We aren't tracking any cameras right now.</h3>\\n\\n<div ng-repeat=\\\"camera in cameras\\\" class=\\\"jumbotron camera camera{{ camera.info.id }}\\\">\\n  <h3>\\n    {{ camera.info.name }}\\n    <a href=\\\"#!/cameras/{{ camera.info.id }}\\\">(Browse archived alarms)</a>\\n    <small><input type=\\\"checkbox\\\" ng-model=\\\"camera.control.preview.enabled\\\" ng-change=\\\"switchPreview(camera.info.id)\\\">Preview</small>\\n    <small><input type=\\\"checkbox\\\" ng-model=\\\"camera.control.arm.enabled\\\" ng-change=\\\"switchArm(camera.info.id)\\\">Armed</small>\\n  </h3>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-8 col-lg-offset-2 img-parent\\\">\\n      <img class=\\\"camera-feed\\\" ng-src=\\\"{{ camera.snapshot.img_url }}\\\" />\\n    </div>\\n  </div>\\n  <div class=\\\"row motion_stats\\\">\\n    <div class=\\\"col-lg-4 col-lg-offset-4\\\">\\n      <div class=\\\"alert alert-success\\\" ng-if=\\\"camera.control.alarm.id === camera.control.arm.responded_alarm\\\">\\n        <strong>No Active Alarm</strong>\\n      </div>\\n      <button class=\\\"alert alert-danger\\\" ng-if=\\\"camera.control.alarm.id !== camera.control.arm.responded_alarm\\\" ng-click=\\\"disarm(camera.info.id)\\\">\\n        <strong>Dismiss Alarm</strong>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./views/dashboard.html\n// module id = 288\n// module chunks = 0","module.exports = Twilio.Sync;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"Twilio.Sync\"\n// module id = 313\n// module chunks = 0"],"sourceRoot":""}